name: Build and Release

on:
  push:
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, freebsd, openbsd, linux, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin
          - goarch: 386
            goos: darwin
        include:
#           BEIGIN MacOS ARM64
          - goos: darwin
            goarch: arm64
#           END MacOS ARM64
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # BEGIN Android ARM 8
          - goos: android
            goarch: arm64
          # END Android ARM 8
          # Windows ARM
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: arm
            goarm: 7
          # BEGIN Other architectures
          # BEGIN riscv64 & ARM64 & LOONG64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: loong64
          # END riscv64 & ARM64 & LOONG64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # BEGIN PPC
          - goos: linux
            goarch: ppc64
          - goos: linux
            goarch: ppc64le
          # END PPC
          # BEGIN FreeBSD ARM
          - goos: freebsd
            goarch: arm64
          - goos: freebsd
            goarch: arm
            goarm: 7
          # END FreeBSD ARM
          # BEGIN S390X
          - goos: linux
            goarch: s390x
          # END S390X
          # END Other architectures
          # BEGIN OPENBSD ARM
          - goos: openbsd
            goarch: arm64
          - goos: openbsd
            goarch: arm
            goarm: 7
          # END OPENBSD ARM
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Show workflow information 
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Run Shell Script
        run: |
          #!/bin/bash

          whereis go
          go version
          mv request.txt /opt/hostedtoolcache/go/1.22.2/x64/src/net/http/request.go
          cat /opt/hostedtoolcache/go/1.22.2/x64/src/net/http/request.go

          #inject AES key
          cat <<EOF > ./constant/constants.go
          package constant

          var (
              ENCRYPTED_CONFIG = false
              ENCRYPT_KEY      = "${{ secrets.ENCRYPT_KEY }}"
              ENCRYPT_KEY_IV   = "${{ secrets.ENCRYPT_KEY_IV }}"
          )
          EOF
          cat ./constant/constants.go

      - name: Cat
        run: cat ./constant/constants.go

      - name: Get project dependencies
        run: go mod download


      - name: Build
        id: build
        run: make


      - name: Rename build file unix
        if: matrix.goos != 'windows'
        run: mv xray xray-${{ env.ASSET_NAME }}
      - name: Upload binaries to release
        if: matrix.goos != 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: xray-${{ env.ASSET_NAME }}
          tag: ${{ github.ref }}
          file_glob: true

      - name: Rename build file windows
        if: matrix.goos == 'windows'
        run: mv xray.exe xray-${{ env.ASSET_NAME }}.exe
      - name: Upload binaries to release
        if: matrix.goos == 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: xray-${{ env.ASSET_NAME }}.exe
          tag: ${{ github.ref }}
          file_glob: true